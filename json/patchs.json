{
  "source": "../api/patchs.md",
  "modules": [
    {
      "textRaw": "热更新",
      "name": "热更新",
      "modules": [
        {
          "textRaw": "0. 准备补丁",
          "name": "0._准备补丁",
          "modules": [
            {
              "textRaw": "HbuiderX生成加密的补丁文件",
              "name": "hbuiderx生成加密的补丁文件",
              "desc": "<p>修改manifest.json文件的版本号</p>\n",
              "modules": [
                {
                  "textRaw": "`[步骤]`1. HbuiderX菜单 -> 发行 -> 本地打包 -> 生成app资源",
                  "name": "`[步骤]`1. HbuiderX菜单 -> 发行 -> 本地打包 -> 生成app资源",
                  "type": "module",
                  "displayName": "`[步骤]`2. HbuiderX菜单 -> 运行 -> 运行到终端 -> 3.生成热补丁"
                },
                {
                  "textRaw": "`[步骤]`2. HbuiderX菜单 -> 运行 -> 运行到终端 -> 3.生成热补丁",
                  "name": "`[步骤]`2._hbuiderx菜单_->_运行_->_运行到终端_->_3.生成热补丁",
                  "type": "module",
                  "displayName": "`[步骤]`2. HbuiderX菜单 -> 运行 -> 运行到终端 -> 3.生成热补丁"
                }
              ],
              "type": "module",
              "displayName": "HbuiderX生成加密的补丁文件"
            }
          ],
          "type": "module",
          "displayName": "0. 准备补丁"
        },
        {
          "textRaw": "1. 自动升级(快捷）",
          "name": "1._自动升级(快捷）",
          "desc": "<ul>\n<li>在你的VUE项目中，加入如下代码；</li>\n<li>那么当你的程序执行到这个代码的时候，你的APP应用，就会检查并自动升级。</li>\n</ul>\n<pre><code class=\"lang-js\">// 检查,直接升级\nconst {version} = require(&#39;robot-tools&#39;); \n\nversion.onReady = () =&gt; { \n    version.checkThenInstall();\n};\n\n</code></pre>\n<p>参数：</p>\n<pre><code class=\"lang-js\">const {version} = require(&#39;robot-tools&#39;);\nversion.checkThenInstall();  //检查并自动升级，有提示文字\nversion.checkThenInstall(&#39;加载中...&#39;);  //修改加载提示文字\nversion.checkThenInstall(false);   //无加载提示， 等于version.install();\n\n//非debug环境(调试基座)才升级\nif(version.isDebug == false){\n    version.checkThenInstall(); \n};\n\n</code></pre>\n",
          "type": "module",
          "displayName": "1. 自动升级(快捷）"
        },
        {
          "textRaw": "2. 先 检查, 然后升级",
          "name": "2._先_检查,_然后升级",
          "modules": [
            {
              "textRaw": "界面代码",
              "name": "界面代码",
              "desc": "<pre><code class=\"lang-html\">&lt;template&gt; \n    &lt;view class=&quot;cu-load load-modal&quot; v-if=&quot;loadingModal&quot;&gt; \n        &lt;image src=&quot;/static/logo.png&quot; mode=&quot;aspectFit&quot;&gt;&lt;/image&gt;\n        &lt;view class=&quot;gray-text&quot;&gt;{{LoadingText}}&lt;/view&gt;\n    &lt;/view&gt;\n    &lt;text&gt;当前版本: {{currentVersion}}&lt;/text&gt;\n    &lt;text&gt;远程版本: {{remoteVersion}}&lt;/text&gt;\n    &lt;button class=&quot;cu-btn bg-green shadow&quot; @tap=&quot;upgrade&quot;&gt;点我升级&lt;/button&gt;\n&lt;/template&gt;\n</code></pre>\n<p>检查代码</p>\n<pre><code class=\"lang-js\">const {version, project} = require(&#39;robot-tools&#39;);\n\nexport default {\n    data:   {loadingModal: false, currentVersion:&#39;0.0.0&#39;,remoteVersion:&#39;&#39;},\n    created: function() {\n        var that = this;\n        this.currentVersion = version.name;\n\n        console.log(&quot;开始检查---&gt;&quot;);\n        version.checkVersion((res) =&gt; { \n            that.remoteVersion = res.version;\n            if (version.name != res.version) {\n                console.log(&#39;需要升级&#39;);\n            } else {\n                console.log(&#39;不升级&#39;);\n            }\n        });\n    },\n    methods:{\n       upgrade: function() {\n            console.log(&quot;开始升级---&gt;&quot;);\n            this.loadingModal = true;\n            this.LoadingText = &#39;升级中..&#39;;\n            version.install((status) =&gt; {\n                this.loadingModal = false;\n            });\n        } \n    }\n};\n\n</code></pre>\n<p>⚠️ 提示：APPID，版本号 ⚠️</p>\n<pre><code>const {version, project} = require(&#39;robot-tools&#39;);\n\nA. project.manifest.id;  // 你代码的id (manifest里的)\nA. project.manifest.appid; \nA. project.manifest.version.name; //你代码的版本号\nA. project.manifest.version.code;\nA. project.manifest; //打印一下看看\nA. version.name;  //你代码的版本号 (manifest里的)\n\n\nB. plus.runtime.appid;\nB. plus.runtime.versionCode;   //基座版本号(整数)\nB. plus.runtime.version;      //基座版本号\nB. plus.runtime.innerVersion;\nB. plus.runtime.uniVersion;\n\n// A是manifest.json里的内容\n// B是基座的信息（调试环境和正式环境，信息不同）\n// ⚠️ 请用A，不要用B ⚠️ \n</code></pre>",
              "type": "module",
              "displayName": "界面代码"
            }
          ],
          "type": "module",
          "displayName": "2. 先 检查, 然后升级"
        }
      ],
      "type": "module",
      "displayName": "热更新"
    }
  ]
}