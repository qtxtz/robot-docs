{
  "source": "../api/patchs.md",
  "modules": [
    {
      "textRaw": "热更新",
      "name": "热更新",
      "modules": [
        {
          "textRaw": "0. 准备补丁",
          "name": "0._准备补丁",
          "modules": [
            {
              "textRaw": "HbuiderX生成加密的补丁文件",
              "name": "hbuiderx生成加密的补丁文件",
              "desc": "<p>修改manifest.json文件的版本号</p>\n",
              "modules": [
                {
                  "textRaw": "`[步骤]`1. HbuiderX菜单 -> 发行 -> 本地打包 -> 生成app资源",
                  "name": "`[步骤]`1. HbuiderX菜单 -> 发行 -> 本地打包 -> 生成app资源",
                  "type": "module",
                  "displayName": "`[步骤]`2. HbuiderX菜单 -> 运行 -> 运行到终端 -> 3.生成热补丁"
                },
                {
                  "textRaw": "`[步骤]`2. HbuiderX菜单 -> 运行 -> 运行到终端 -> 3.生成热补丁",
                  "name": "`[步骤]`2._hbuiderx菜单_->_运行_->_运行到终端_->_3.生成热补丁",
                  "type": "module",
                  "displayName": "`[步骤]`2. HbuiderX菜单 -> 运行 -> 运行到终端 -> 3.生成热补丁"
                }
              ],
              "type": "module",
              "displayName": "HbuiderX生成加密的补丁文件"
            }
          ],
          "type": "module",
          "displayName": "0. 准备补丁"
        },
        {
          "textRaw": "1. 自动升级(快捷）",
          "name": "1._自动升级(快捷）",
          "desc": "<ul>\n<li>在你的VUE项目中，加入如下代码；</li>\n<li>那么当你的程序执行到这个代码的时候，你的APP应用，就会检查并自动升级。</li>\n</ul>\n<pre><code class=\"lang-js\">// 直接升级\nrequire(&#39;robot-tools&#39;).version.checkThenInstall();\n\n</code></pre>\n<p>参数：</p>\n<pre><code class=\"lang-js\">const {version} = require(&#39;robot-tools&#39;);\nversion.checkThenInstall();  //检查并自动升级\nversion.checkThenInstall(&#39;加载中...&#39;);  //修改加载提示文字\nversion.checkThenInstall(false);   //无加载提示\n\n//非debug环境(调试基座)才升级\nif(version.isDebug == false){\n    version.checkThenInstall(); \n};\n\n</code></pre>\n",
          "type": "module",
          "displayName": "1. 自动升级(快捷）"
        },
        {
          "textRaw": "2. 先 检查 然后 更新",
          "name": "2._先_检查_然后_更新",
          "modules": [
            {
              "textRaw": "2.1 检查版本号",
              "name": "2.1_检查版本号",
              "desc": "<pre><code>const {version, project} = require(&#39;robot-tools&#39;);\n\nfunction checkVersion(){\n    // #ifndef APP-PLUS\n    return;\n    // #endif    \n\n    version.checkVersion((res) =&gt; {\n        console.log(&#39;当前程序的版本号:&#39; + version.name);\n        console.log(&#39;最新补丁的版本号:&#39; + res.version);\n        if (version.name != res.version) {\n            console.log(&#39;需要升级&#39;);\n        } else {\n            console.log(&#39;不升级&#39;);\n        }\n    });\n\n} \n</code></pre><ul>\n<li>A. project.manifest.appid: </li>\n<li>B. plus.runtime.appid </li>\n</ul>\n<p>//如果你是在基座里调试， A是你代码的id， B是基座自带demo的id</p>\n<p>//如果你是发行包里运行， A==B</p>\n",
              "type": "module",
              "displayName": "2.1 检查版本号"
            },
            {
              "textRaw": "2.2 执行升级",
              "name": "2.2_执行升级",
              "desc": "<pre><code class=\"lang-html\">&lt;template&gt; \n    &lt;view class=&quot;cu-load load-modal&quot; v-if=&quot;loadingModal&quot;&gt; \n        &lt;image src=&quot;/static/logo.png&quot; mode=&quot;aspectFit&quot;&gt;&lt;/image&gt;\n        &lt;view class=&quot;gray-text&quot;&gt;{{LoadingText}}&lt;/view&gt;\n    &lt;/view&gt;\n    &lt;button class=&quot;cu-btn bg-green shadow&quot; @tap=&quot;upgrade&quot;&gt;点我升级&lt;/button&gt;\n&lt;/template&gt;\n</code></pre>\n<pre><code class=\"lang-js\">const {version} = require(&#39;robot-tools&#39;);\n\nexport default {\n    data:{loadingModal: false}, \n    methods:{\n       upgrade: function() {\n        this.loadingModal = true;\n        this.LoadingText = &#39;升级中..&#39;;\n        version.install((status) =&gt; {\n            this.loadingModal = false;\n        });\n    }\n};\n\n</code></pre>\n",
              "type": "module",
              "displayName": "2.2 执行升级"
            }
          ],
          "type": "module",
          "displayName": "2. 先 检查 然后 更新"
        }
      ],
      "type": "module",
      "displayName": "热更新"
    }
  ]
}